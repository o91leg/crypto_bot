"""
–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä
"""
import asyncio
from data.database import get_async_session
from data.models.pair_model import Pair
from services.data_fetchers.historical.historical_fetcher import HistoricalDataFetcher
from utils.logger import get_logger

logger = get_logger(__name__)


async def force_load_all_pairs():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä"""
    async with get_async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞—Ä—ã
        pairs = await Pair.get_all_pairs(session)
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–∞—Ä: {len(pairs)}")
        
        if not pairs:
            print("‚ùå –í –ë–î –Ω–µ—Ç –ø–∞—Ä –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
            return
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–∞—Ä—ã
        async with HistoricalDataFetcher() as fetcher:
            for pair in pairs:
                print(f"\nüì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è {pair.symbol}...")
                
                try:
                    candles_loaded = await fetcher.fetch_pair_historical_data(
                        session=session,
                        pair_id=pair.id,
                        symbol=pair.symbol,
                        timeframes=['1m', '5m', '15m', '1h', '2h', '4h', '1d', '1w'],
                        limit=500
                    )
                    
                    print(f"‚úÖ {pair.symbol}: –∑–∞–≥—Ä—É–∂–µ–Ω–æ {candles_loaded} —Å–≤–µ—á–µ–π")
                    await session.commit()
                    
                except Exception as e:
                    print(f"‚ùå {pair.symbol}: –æ—à–∏–±–∫–∞ - {str(e)}")
                    await session.rollback()
        
        print("\nüéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    asyncio.run(force_load_all_pairs())
