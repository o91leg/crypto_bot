"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–∞—Ä–∞–º –∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º
"""
import asyncio
from sqlalchemy import text
from data.database import get_session, init_database


async def check_distribution():
    await init_database()

    async with get_session() as session:
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –ø–∞—Ä–∞–º –∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º
        result = await session.execute(text("""
            SELECT p.symbol, c.timeframe, COUNT(*) as count
            FROM pairs p 
            JOIN candles c ON p.id = c.pair_id 
            GROUP BY p.symbol, c.timeframe 
            ORDER BY p.symbol, c.timeframe
        """))

        print("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–≤–µ—á–µ–π –ø–æ –ø–∞—Ä–∞–º –∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º:")
        current_pair = None

        for row in result:
            if current_pair != row.symbol:
                print(f"\nüìà {row.symbol}:")
                current_pair = row.symbol

            status = "‚úÖ" if row.count >= 15 else "‚ùå"
            print(f"  {status} {row.timeframe}: {row.count} —Å–≤–µ—á–µ–π")


if __name__ == "__main__":
    asyncio.run(check_distribution())