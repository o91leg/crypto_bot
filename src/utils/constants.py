"""
–ü—É—Ç—å: src/utils/constants.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
–ê–≤—Ç–æ—Ä: Crypto Bot Team
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-07-28
"""

from typing import Dict, List, Tuple

# ==================== –û–ë–©–ò–ï –ö–û–ù–°–¢–ê–ù–¢–´ ====================

# –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_VERSION = "1.0.0"
APP_NAME = "Crypto Bot"
API_VERSION = "v1"
SUPPORTED_EXCHANGES = ["binance"]

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
MAX_MESSAGE_LENGTH = 4096  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
MAX_USERNAME_LENGTH = 255
MAX_PAIR_SYMBOL_LENGTH = 20
MAX_TIMEFRAME_LENGTH = 5

# ==================== –ò–ù–î–ò–ö–ê–¢–û–†–´ ====================

# RSI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEFAULT_RSI_PERIOD = 14
RSI_MIN_VALUE = 0.0
RSI_MAX_VALUE = 100.0

# RSI –∑–æ–Ω—ã
RSI_OVERSOLD_STRONG = 20.0
RSI_OVERSOLD_MEDIUM = 25.0
RSI_OVERSOLD_NORMAL = 30.0
RSI_OVERBOUGHT_NORMAL = 70.0
RSI_OVERBOUGHT_MEDIUM = 75.0
RSI_OVERBOUGHT_STRONG = 80.0

# EMA –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
DEFAULT_EMA_PERIODS = [20, 50, 100, 200]
EMA_MIN_PERIOD = 2
EMA_MAX_PERIOD = 1000

# ==================== –¢–ê–ô–ú–§–†–ï–ô–ú–´ ====================

# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã Binance
BINANCE_TIMEFRAMES = [
    "1m", "3m", "5m", "15m", "30m",
    "1h", "2h", "4h", "6h", "8h", "12h",
    "1d", "3d", "1w", "1M"
]

# –¢–∞–π–º—Ñ—Ä–µ–π–º—ã –±–æ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_TIMEFRAMES = ["1m", "5m", "15m", "1h", "2h", "4h", "1d", "1w"]

# –ú–∞–ø–ø–∏–Ω–≥ —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
TIMEFRAME_TO_MS = {
    "1m": 60 * 1000,
    "3m": 3 * 60 * 1000,
    "5m": 5 * 60 * 1000,
    "15m": 15 * 60 * 1000,
    "30m": 30 * 60 * 1000,
    "1h": 60 * 60 * 1000,
    "2h": 2 * 60 * 60 * 1000,
    "4h": 4 * 60 * 60 * 1000,
    "6h": 6 * 60 * 60 * 1000,
    "8h": 8 * 60 * 60 * 1000,
    "12h": 12 * 60 * 60 * 1000,
    "1d": 24 * 60 * 60 * 1000,
    "3d": 3 * 24 * 60 * 60 * 1000,
    "1w": 7 * 24 * 60 * 60 * 1000,
    "1M": 30 * 24 * 60 * 60 * 1000,  # –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ
}

# –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤
TIMEFRAME_NAMES = {
    "1m": "1 –º–∏–Ω—É—Ç–∞",
    "3m": "3 –º–∏–Ω—É—Ç—ã",
    "5m": "5 –º–∏–Ω—É—Ç",
    "15m": "15 –º–∏–Ω—É—Ç",
    "30m": "30 –º–∏–Ω—É—Ç",
    "1h": "1 —á–∞—Å",
    "2h": "2 —á–∞—Å–∞",
    "4h": "4 —á–∞—Å–∞",
    "6h": "6 —á–∞—Å–æ–≤",
    "8h": "8 —á–∞—Å–æ–≤",
    "12h": "12 —á–∞—Å–æ–≤",
    "1d": "1 –¥–µ–Ω—å",
    "3d": "3 –¥–Ω—è",
    "1w": "1 –Ω–µ–¥–µ–ª—è",
    "1M": "1 –º–µ—Å—è—Ü"
}

# ==================== –°–ò–ì–ù–ê–õ–´ ====================

# –¢–∏–ø—ã —Å–∏–≥–Ω–∞–ª–æ–≤
SIGNAL_TYPES = {
    "RSI_OVERSOLD_STRONG": "rsi_oversold_strong",
    "RSI_OVERSOLD_MEDIUM": "rsi_oversold_medium",
    "RSI_OVERSOLD_NORMAL": "rsi_oversold_normal",
    "RSI_OVERBOUGHT_NORMAL": "rsi_overbought_normal",
    "RSI_OVERBOUGHT_MEDIUM": "rsi_overbought_medium",
    "RSI_OVERBOUGHT_STRONG": "rsi_overbought_strong",
    "EMA_CROSS_UP": "ema_cross_up",
    "EMA_CROSS_DOWN": "ema_cross_down",
    "VOLUME_SPIKE": "volume_spike",
    "TREND_CHANGE": "trend_change"
}

# –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
SIGNAL_REPEAT_INTERVALS = {
    "rsi_oversold_strong": 60,    # 1 –º–∏–Ω—É—Ç–∞
    "rsi_oversold_medium": 120,   # 2 –º–∏–Ω—É—Ç—ã
    "rsi_oversold_normal": 180,   # 3 –º–∏–Ω—É—Ç—ã
    "rsi_overbought_normal": 180, # 3 –º–∏–Ω—É—Ç—ã
    "rsi_overbought_medium": 120, # 2 –º–∏–Ω—É—Ç—ã
    "rsi_overbought_strong": 60,  # 1 –º–∏–Ω—É—Ç–∞
    "ema_cross_up": 300,          # 5 –º–∏–Ω—É—Ç
    "ema_cross_down": 300,        # 5 –º–∏–Ω—É—Ç
    "volume_spike": 600,          # 10 –º–∏–Ω—É—Ç
}

# –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤
SIGNAL_EMOJIS = {
    "rsi_oversold_strong": "üî¥",
    "rsi_oversold_medium": "üü†",
    "rsi_oversold_normal": "üü°",
    "rsi_overbought_normal": "üü°",
    "rsi_overbought_medium": "üü†",
    "rsi_overbought_strong": "üî¥",
    "ema_cross_up": "üöÄ",
    "ema_cross_down": "üí•",
    "volume_spike": "üî•",
    "default": "üìä"
}

# ==================== BINANCE API ====================

# URL —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
BINANCE_REST_API_URL = "https://api.binance.com"
BINANCE_WEBSOCKET_URL = "wss://stream.binance.com:9443/ws"

# –õ–∏–º–∏—Ç—ã API
BINANCE_WEIGHT_LIMIT = 1200
BINANCE_ORDER_LIMIT = 10
BINANCE_MAX_CONNECTIONS = 5

# –¢–∏–ø–∏—á–Ω—ã–µ –∫–æ—Ç–∏—Ä—É–µ–º—ã–µ –≤–∞–ª—é—Ç—ã
QUOTE_ASSETS = ["USDT", "BTC", "ETH", "BNB", "BUSD", "USDC"]

# –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–∏–º–≤–æ–ª–∞
MIN_SYMBOL_LENGTH = 6
MAX_SYMBOL_LENGTH = 12

# ==================== –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø ====================

# –õ–∏–º–∏—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
MAX_NOTIFICATIONS_PER_MINUTE = 20
MAX_NOTIFICATIONS_PER_HOUR = 100
NOTIFICATION_RATE_LIMIT_WINDOW = 60  # —Å–µ–∫—É–Ω–¥

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_PRIORITIES = {
    "HIGH": 1,
    "MEDIUM": 2,
    "LOW": 3
}

# ==================== –ë–ê–ó–ê –î–ê–ù–ù–´–• ====================

# –õ–∏–º–∏—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
DEFAULT_PAGE_SIZE = 50
MAX_PAGE_SIZE = 1000
MAX_CANDLES_PER_REQUEST = 1000

# TTL –¥–ª—è –∫–µ—à–∞ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
CACHE_TTL = {
    "candles": 86400,        # 1 –¥–µ–Ω—å
    "indicators": 3600,      # 1 —á–∞—Å
    "user_data": 1800,       # 30 –º–∏–Ω—É—Ç
    "pairs": 21600,          # 6 —á–∞—Å–æ–≤
    "signals": 7200,         # 2 —á–∞—Å–∞
}

# ==================== –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï ====================

# –§–æ—Ä–º–∞—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
PRICE_DECIMAL_PLACES = 8
PERCENTAGE_DECIMAL_PLACES = 2
VOLUME_DECIMAL_PLACES = 2

# –°–∏–º–≤–æ–ª—ã –≤–∞–ª—é—Ç
CURRENCY_SYMBOLS = {
    "USD": "$",
    "USDT": "$",
    "USDC": "$",
    "BTC": "‚Çø",
    "ETH": "Œû",
    "EUR": "‚Ç¨",
    "GBP": "¬£",
    "JPY": "¬•"
}

# ==================== –≠–ú–û–î–ó–ò –ò –°–ò–ú–í–û–õ–´ ====================

# –û–±—â–∏–µ —ç–º–æ–¥–∑–∏
EMOJI = {
    "rocket": "üöÄ",
    "chart": "üìä",
    "bell": "üîî",
    "warning": "‚ö†Ô∏è",
    "error": "‚ùå",
    "success": "‚úÖ",
    "info": "‚ÑπÔ∏è",
    "loading": "‚è≥",
    "money": "üí∞",
    "up": "üìà",
    "down": "üìâ",
    "fire": "üî•",
    "target": "üéØ",
    "gear": "‚öôÔ∏è",
    "home": "üè†",
    "back": "‚¨ÖÔ∏è",
    "plus": "‚ûï",
    "minus": "‚ûñ",
    "question": "‚ùì"
}

# –¢—Ä–µ–Ω–¥–æ–≤—ã–µ —ç–º–æ–¥–∑–∏
TREND_EMOJIS = {
    "bullish": "üêÇ",
    "bearish": "üêª",
    "sideways": "‚û°Ô∏è",
    "strong_up": "üöÄ",
    "strong_down": "üí•"
}

# ==================== –°–û–û–ë–©–ï–ù–ò–Ø ====================

# –®–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π
MESSAGE_TEMPLATES = {
    "welcome_new": "üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {app_name}!",
    "welcome_back": "üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!",
    "pair_added": "‚úÖ –ü–∞—Ä–∞ {pair} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ",
    "pair_removed": "‚ùå –ü–∞—Ä–∞ {pair} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è",
    "notifications_enabled": "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã",
    "notifications_disabled": "üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã",
    "error_occurred": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}",
    "loading": "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..."
}

# ==================== –†–ï–ì–£–õ–Ø–†–ù–´–ï –í–´–†–ê–ñ–ï–ù–ò–Ø ====================

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
PATTERNS = {
    "symbol": r"^[A-Z]{3,12}$",
    "timeframe": r"^(1|3|5|15|30)m|^(1|2|4|6|8|12)h|^(1|3)d|^1w|^1M$",
    "price": r"^\d+\.?\d*$",
    "percentage": r"^-?\d+\.?\d*%?$"
}

# ==================== –ü–£–¢–ò –ò –§–ê–ô–õ–´ ====================

# –ü—É—Ç–∏ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
LOGS_DIR = "logs"
DATA_DIR = "data"
TEMP_DIR = "temp"
STATIC_DIR = "static"

# –ò–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
LOG_FILE = "crypto_bot.log"
ERROR_LOG_FILE = "errors.log"
ACCESS_LOG_FILE = "access.log"

# ==================== –§–£–ù–ö–¶–ò–ò-–ü–û–ú–û–©–ù–ò–ö–ò ====================

def get_timeframe_ms(timeframe: str) -> int:
    """
    –ü–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞.

    Args:
        timeframe: –¢–∞–π–º—Ñ—Ä–µ–π–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, '1h')

    Returns:
        int: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥
    """
    return TIMEFRAME_TO_MS.get(timeframe, 0)


def get_signal_emoji(signal_type: str) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ —Å–∏–≥–Ω–∞–ª–∞.

    Args:
        signal_type: –¢–∏–ø —Å–∏–≥–Ω–∞–ª–∞

    Returns:
        str: –≠–º–æ–¥–∑–∏
    """
    return SIGNAL_EMOJIS.get(signal_type, "üìä")


def get_currency_symbol(currency: str) -> str:
    """
    –ü–æ–ª—É—á–∏—Ç—å —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã.

    Args:
        currency: –ö–æ–¥ –≤–∞–ª—é—Ç—ã

    Returns:
        str: –°–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã
    """
    return CURRENCY_SYMBOLS.get(currency.upper(), currency)


def is_valid_timeframe(timeframe: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞.

    Args:
        timeframe: –¢–∞–π–º—Ñ—Ä–µ–π–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

    Returns:
        bool: True –µ—Å–ª–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º –≤–∞–ª–∏–¥–µ–Ω
    """
    return timeframe in BINANCE_TIMEFRAMES


def get_repeat_interval(signal_type: str) -> int:
    """
    –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è –¥–ª—è —Ç–∏–ø–∞ —Å–∏–≥–Ω–∞–ª–∞.

    Args:
        signal_type: –¢–∏–ø —Å–∏–≥–Ω–∞–ª–∞

    Returns:
        int: –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    """
    return SIGNAL_REPEAT_INTERVALS.get(signal_type, 300)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 –º–∏–Ω—É—Ç