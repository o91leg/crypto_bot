"""
–ü—É—Ç—å: src/utils/rsi_debug.py
–û–ø–∏—Å–∞–Ω–∏–µ: –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ RSI
–ê–≤—Ç–æ—Ä: Crypto Bot Team
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-07-30
"""

from typing import List
from decimal import Decimal

def debug_rsi_calculation(prices: List[float], period: int = 14) -> dict:
    """
    –î–µ—Ç–∞–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ RSI —Å –ø–æ—à–∞–≥–æ–≤—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
    
    Args:
        prices: –°–ø–∏—Å–æ–∫ —Ü–µ–Ω –∑–∞–∫—Ä—ã—Ç–∏—è
        period: –ü–µ—Ä–∏–æ–¥ RSI
        
    Returns:
        dict: –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—á–µ—Ç–µ
    """
    if len(prices) < period + 1:
        return {"error": f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö: –Ω—É–∂–Ω–æ {period + 1}, –µ—Å—Ç—å {len(prices)}"}
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–µ–Ω—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    recent_prices = prices[-(period + 5):]  # –ë–µ—Ä–µ–º —á—É—Ç—å –±–æ–ª—å—à–µ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    
    # –í—ã—á–∏—Å–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    changes = []
    for i in range(1, len(recent_prices)):
        change = recent_prices[i] - recent_prices[i-1]
        changes.append(change)
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –ø—Ä–∏–±—ã–ª–∏ –∏ —É–±—ã—Ç–∫–∏
    gains = [max(change, 0) for change in changes]
    losses = [abs(min(change, 0)) for change in changes]
    
    # –ü–µ—Ä–≤–æ–µ —Å—Ä–µ–¥–Ω–µ–µ
    avg_gain = sum(gains[:period]) / period
    avg_loss = sum(losses[:period]) / period
    
    rs = avg_gain / avg_loss if avg_loss > 0 else float('inf')
    rsi = 100 - (100 / (1 + rs)) if rs != float('inf') else 100
    
    return {
        "prices_used": recent_prices,
        "price_changes": changes,
        "gains": gains,
        "losses": losses,
        "avg_gain": round(avg_gain, 6),
        "avg_loss": round(avg_loss, 6),
        "rs": round(rs, 6) if rs != float('inf') else "infinity",
        "rsi": round(rsi, 2),
        "period": period,
        "data_points": len(prices)
    }

def compare_with_manual_rsi(symbol: str, expected_rsi: float, calculated_rsi: float) -> str:
    """
    –°—Ä–∞–≤–Ω–∏—Ç—å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π RSI —Å –æ–∂–∏–¥–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.
    
    Args:
        symbol: –°–∏–º–≤–æ–ª –ø–∞—Ä—ã
        expected_rsi: –û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å TradingView)
        calculated_rsi: –ù–∞—à–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        
    Returns:
        str: –†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    """
    difference = abs(expected_rsi - calculated_rsi)
    
    if difference <= 1:
        status = "‚úÖ –¢–û–ß–ù–û"
    elif difference <= 3:
        status = "‚ö†Ô∏è –ë–õ–ò–ó–ö–û"
    else:
        status = "‚ùå –ù–ï–¢–û–ß–ù–û"
    
    return f"""
üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ RSI –¥–ª—è {symbol}:
{status}
–û–∂–∏–¥–∞–µ–º—ã–π: {expected_rsi}
–ù–∞—à —Ä–∞—Å—á–µ—Ç: {calculated_rsi}
–†–∞–∑–Ω–∏—Ü–∞: {difference:.2f}
–î–æ–ø—É—Å—Ç–∏–º–æ: —Ä–∞–∑–Ω–∏—Ü–∞ –¥–æ 1-2 –ø—É–Ω–∫—Ç–æ–≤
"""
