"""
–ü—É—Ç—å: test_simple.py
–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(str(Path(__file__).parent / "src"))


async def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è."""
    try:
        print("üîÑ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã...")
        from services.websocket.binance_websocket import BinanceWebSocketClient
        from services.websocket.stream_manager import StreamManager

        print("‚úÖ –ò–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω!")

        print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ WebSocket –∫–ª–∏–µ–Ω—Ç–∞...")
        client = BinanceWebSocketClient()
        print(f"‚úÖ WebSocket –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {client.is_connected()}")

        print("üì° –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ StreamManager...")
        manager = StreamManager()
        print("‚úÖ StreamManager —Å–æ–∑–¥–∞–Ω!")

        print("üöÄ –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...")
        try:
            await client.connect()
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

            print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
            stats = await client.get_connection_stats()
            print(f"   –°–æ—Å—Ç–æ—è–Ω–∏–µ: {stats['state']}")
            print(f"   ID —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {stats['connection_id']}")
            print(f"   –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats['uptime_seconds']}s")

            await client.disconnect()
            print("‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return False

        return True

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç WebSocket —Å–∏—Å—Ç–µ–º—ã")
    print("=" * 40)

    success = await quick_test()

    if success:
        print("\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! WebSocket —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        return 0
    else:
        print("\nüí• –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π.")
        return 1


if __name__ == "__main__":
    try:
        exit_code = asyncio.run(main())
        sys.exit(exit_code)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
        sys.exit(130)
    except Exception as e:
        print(f"\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)